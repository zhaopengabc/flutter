/// Flutter icons HandyIcon
/// Copyright (C) 2020 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  HandyIcon
///      fonts:
///       - asset: fonts/HandyIcon.ttf
///
/// 
/// * Font Awesome, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL ()
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
///
import 'package:flutter/widgets.dart';

class HandyIcon {
  HandyIcon._();

  static const _kFontFam = 'HandyIcon';

  static const IconData screen_set = const IconData(0xe800, fontFamily: _kFontFam);
  static const IconData help_circled = const IconData(0xe801, fontFamily: _kFontFam);
  static const IconData set_more = const IconData(0xe802, fontFamily: _kFontFam);
  static const IconData screen_module = const IconData(0xe803, fontFamily: _kFontFam);
  static const IconData time = const IconData(0xe804, fontFamily: _kFontFam);
  static const IconData eye_close = const IconData(0xe805, fontFamily: _kFontFam);
  static const IconData eye_open = const IconData(0xe806, fontFamily: _kFontFam);
  static const IconData screen_info = const IconData(0xe807, fontFamily: _kFontFam);
  static const IconData screen_info_1 = const IconData(0xe80a, fontFamily: _kFontFam);
  static const IconData screen_status = const IconData(0xe80f, fontFamily: _kFontFam);
  static const IconData back = const IconData(0xe810, fontFamily: _kFontFam);
  static const IconData screen_config_1 = const IconData(0xe811, fontFamily: _kFontFam);
  static const IconData next = const IconData(0xe812, fontFamily: _kFontFam);
  static const IconData dropdown = const IconData(0xe813, fontFamily: _kFontFam);
  static const IconData minus = const IconData(0xe814, fontFamily: _kFontFam);
  static const IconData plus = const IconData(0xe816, fontFamily: _kFontFam);
  static const IconData radio = const IconData(0xe818, fontFamily: _kFontFam);
  static const IconData program_manage_pressed = const IconData(0xe819, fontFamily: _kFontFam);
  static const IconData program_manage = const IconData(0xe81a, fontFamily: _kFontFam);
  static const IconData screen_manage_pressed = const IconData(0xe81b, fontFamily: _kFontFam);
  static const IconData screen_manage = const IconData(0xe81c, fontFamily: _kFontFam);
  static const IconData screen_config = const IconData(0xe81d, fontFamily: _kFontFam);
  static const IconData system_set_pressed = const IconData(0xe81e, fontFamily: _kFontFam);
  static const IconData system_set = const IconData(0xe81f, fontFamily: _kFontFam);
  static const IconData clound_ctr = const IconData(0xe820, fontFamily: _kFontFam);
  static const IconData net_set = const IconData(0xe821, fontFamily: _kFontFam);
  static const IconData video_control = const IconData(0xe822, fontFamily: _kFontFam);
  static const IconData conventent_control = const IconData(0xe824, fontFamily: _kFontFam);
  static const IconData monitor_manage = const IconData(0xe825, fontFamily: _kFontFam);
  static const IconData advance_set = const IconData(0xe826, fontFamily: _kFontFam);
  static const IconData play_manage = const IconData(0xe827, fontFamily: _kFontFam);
  static const IconData cloundCtr_help = const IconData(0xe873, fontFamily: _kFontFam);
  static const IconData delete_list = const IconData(0xe874, fontFamily: _kFontFam);
}
